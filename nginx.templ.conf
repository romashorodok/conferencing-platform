events {
    worker_connections 1024;
}

user root;

stream {
    upstream media_server_webrtc {
        server media-server:3478;
    }

    server {
        listen 3478 udp;
        proxy_pass media_server_webrtc;
    }
}

http {
    upstream media_server_http {
        server media-server:8080;
    }

    server {
        listen 443 ssl;
        root /app/client/dist;

        server_name ${DOMAIN};
        ssl_certificate ${SSL_CERTIFICATE};
        ssl_certificate_key ${SSL_CERTIFICATE_KEY};

        expires -1;

        # TODO: decide what should be cached
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";

        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        location /api/ {
            rewrite ^/api(/.*)$ $1 break;
            proxy_pass http://media_server_http;

            # TODO: Is it good ???
            proxy_connect_timeout 1d;
            proxy_send_timeout 1d;
            proxy_read_timeout 1d;

            proxy_set_header upgrade $http_upgrade;
            proxy_set_header connection "upgrade";
            proxy_set_header host $host;
            proxy_set_header x-real-ip $remote_addr;
            proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;
            proxy_set_header x-forwarded-proto $scheme;
            proxy_redirect off;
        }

        location / {
            try_files $uri $uri/ /index.html;
        }

        types {
            text/html html;
            text/css css;
            application/json json;
            application/javascript js;
            image/jpeg jpg jpeg;
        }

        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|otf)$ {
            add_header Cache-Control "public, immutable";
            add_header "Access-Control-Allow-Origin" "*";
        }
    }
}


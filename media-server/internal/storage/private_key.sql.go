// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: private_key.sql

package storage

import (
	"context"
	"encoding/json"

	"github.com/google/uuid"
)

const getPrivateKey = `-- name: GetPrivateKey :one
SELECT
    jws_message
FROM private_keys
WHERE private_keys.id = $1
`

func (q *Queries) GetPrivateKey(ctx context.Context, id uuid.UUID) (json.RawMessage, error) {
	row := q.queryRow(ctx, q.getPrivateKeyStmt, getPrivateKey, id)
	var jws_message json.RawMessage
	err := row.Scan(&jws_message)
	return jws_message, err
}

const newPrivateKey = `-- name: NewPrivateKey :one
INSERT INTO private_keys (
    jws_message
) VALUES (
    $1
) RETURNING id
`

func (q *Queries) NewPrivateKey(ctx context.Context, jwsMessage json.RawMessage) (uuid.UUID, error) {
	row := q.queryRow(ctx, q.newPrivateKeyStmt, newPrivateKey, jwsMessage)
	var id uuid.UUID
	err := row.Scan(&id)
	return id, err
}
